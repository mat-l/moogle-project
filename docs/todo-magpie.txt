Friday 2014.01.17 13:42:13


-- HIGH PRIORITY ----------------------------------------------------------------------------------

* Refresh tokens

* Facebook, Twitter, Dropbox: can we build some inheritance relationships for ApiFacebookResponse
and similar?

---------------------------------------------------------------------------------------------------


* USE MSG IN Synchronizer
The Synchronizer launches: Crawler, Downloader, Indexer in sequence
We could use msg instead i.e. launching a masg after each step.

* REFACTOR MODULE redisutils
The module became too big

* Twitter
There is a rate limit of 180 req per access_token every 15 min
https://dev.twitter.com/docs/rate-limiting/1.1/limits

* What if a user edits/deletes an old post on Twitter/Facebook?

* Shall I implement a check like the following?
Crawling:
- crawl facebook and find 87 posts
- add those posts to redis
- * check that redis has 87 entries in the list and 87 hashes
Indexing:
- read facebook index list in redis
- index those entries
- check that facebook index list in redis is empty and there is no hash

* Facebook: store details for links, photo, video, like:
name -- for links, photo
caption -- for links, photo
description -- for links

* Twitter
We index the text_clean, which is the text with URLs removed
URLs are in a list in Python code, but they are not passed to redis and solr
We can add them so users can explicitly search a link or a link from a specific domain

* When a BearerToken is removed (via Moogle) then the index in Solr must be deleted

* DESIGN
Can I do something to model in a connected (maybe hierarchical) structure these models:
 - the main entity (a FB post, a tweet, o dropbox file) as given in a API response
 - its redis entry
 - its solr entry
I've already done something for API entry and Redis entry: I think I can extend it to Solr

* DESIGN
Move Solr code to a new sub-project because it would be deployed in the machine where Sorl is.


-- LOW PRIORITY -----------------------------------------------------------------------------------

* TWITTER
Add "dynamic" fields like: favorited, favorite_count, retweet_count

* FACEBOOK
Add "dynamic" field like: comments, likes

* GOOGLE +
Add it

* Replace settings.DROPBOX_FILE_EXT_FILTER w/ a setting coming from Moogle Settings page

* DROPBOX: the content of files is stored in Solr. This could take a lot of disk space even tho
we only index files < 10 MB.
Storing is the only way to use the "hit highlighting" feature.
If we ever experience problems in disk space, we could change pur strategy and keep indexing
files < 10 MB, but storing only files < 500 KB.
We could do that by checking the file size in Python and then follow the ideas sketched here:
http://wiki.apache.org/solr/ExtractingRequestHandler
Paragraph: "You may notice that although you can search on any of the text in the sample document, you
 may not be able to see that text when the document is retrieved..."

---------------------------------------------------------------------------------------------------